{"version":3,"sources":["Components/SocialMedia/SocialMedia.js","Components/TopNav/TopNav.js","Components/MainNav/MainNav.js","Components/Banner/Banner.js","Components/Education/Education.js","Components/ProjectWork/ProjectWork.js","Components/Skills/Skills.js","Components/Table/Table.js","Components/Footer/Footer.js","Constants/myInfo.js","Container/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["SocialMedia","props","href","link","target","iconOf","TopNav","socialIcon","data","map","elements","key","id","className","myInfo","name","email","contact","MainNav","navItems","title","website","src","img","alt","Banner","style","backgroundImage","bgImg","aboutMe","Education","myEducation","index","collegeName","date","listStyle","ProjectWork","myProject","techStacks","techStack","item","projectName","desc","Skills","mySkills","skillContent","Table","columns","defaultPageSize","showPagination","resizable","previousText","nextText","pageSizeOptions","filterable","loading","sortable","minRows","getTheadFilterThProps","overflow","textAlign","Footer","options","value","label","allData","location","skills","skillsContent","socialMediaData","progress","column","Header","accessor","width","maxWidth","minWidth","Cell","row","filterMethod","filter","toString","toLowerCase","includes","Filter","onChange","placeholder","event","Portfolio","this","myData","dataSet","paddingBottom","Component","App","Boolean","window","hostname","match","ROOT","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5b0d946.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction SocialMedia(props){\n    \n    let icon =(\n        <>\n            <a href={props.link} target='_blank'>{props.iconOf}</a>\n        </>\n    );\n    return icon;\n}\nexport default SocialMedia;","import React from 'react';\n\nimport SocialMedia from './../SocialMedia/SocialMedia';\n\nfunction TopNav(props){\n    let socialIcon = props.data.map(elements => {\n        return <SocialMedia key={elements.id} iconOf={elements.iconOf} link={elements.link} />\n    })\n    let topNav=(\n        <div className='top-nav clearfix'>  \n            <div className='social-media-holder'>\n                <span className='logo'>{props.myInfo.name}</span> \n                {socialIcon}\n            </div>\n            <div className='my-contact'>\n                <span>{props.myInfo.email}</span>\n                <span>{props.myInfo.contact}</span>\n            </div>\n        </div>\n    );\n    return topNav;\n}\nexport default TopNav;","import React from 'react';\n\nfunction MainNav(props){\n    let navItems= props.navItems.map(elements => {\n        return (\n            <li key={elements.id} className='nav-item'>\n                <a href={elements.link} className='nav-link'>{elements.title}</a>\n            </li>\n        )\n    })\n    let mainNav =(\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n            <a className=\"navbar-brand\" href={props.myInfo.website}>\n            <img src={props.myInfo.img} className='img-responsive' id='pic-logo' title={props.myInfo.name} alt={props.myInfo.name}/>\n            </a>\n            <ul className='navbar-nav'>\n                {navItems}\n            </ul>\n        </nav>\n    )\n    return mainNav;\n}\n\nexport default MainNav;\n","import React from 'react';\n\nfunction Banner(props){\n    let banner=(\n        <div className='card' style={{backgroundImage: `url(${props.myInfo.bgImg})` }}>\n            <div className='card-body text-white text-center p-5'>\n                <h1 className='card-title'>{props.myInfo.name}</h1>\n                <p>\n                    {props.myInfo.aboutMe}\n                </p>\n            </div>\n        </div>\n    );\n\n    return banner;\n}\nexport default  Banner;","import React from 'react';\n\nfunction Education(props){\n    let myEducation = props.myEducation.map((elements,index)=>{\n        return (\n            <li key={index} className='pb-3 mb-3 border-bottom clearfix'>\n                <br/>\n                <span className='h4'>{elements.collegeName}</span><br/>\n                <small className='text-muted'>{elements.title}</small>\n                <small className='float-right font-weight-light'>{elements.date}</small>\n            </li>\n        );\n    })\n    let education=(\n        <>\n            <h2 className='text-muted mt-2 text-center'>Education</h2>\n            <ul style={{listStyle:'none'}}>\n                {myEducation}\n            </ul>\n        </>\n    )\n    return education;\n}\nexport default Education;","import React from 'react';\n\nfunction ProjectWork(props){\n    let myProject = props.myProject.map(elements=>{\n        let techStacks = elements.techStack.map((item,index)=>{\n        return <kbd key={index} className='m-1'><small>{item}</small></kbd>\n        })\n        return (\n            <li key={elements.id} className='list-group-item'>\n                <span className='h5 d-block'>\n                    <a href={elements.link} title={elements.title}>{elements.projectName}</a>\n                </span>\n                <p>\n                    {elements.desc}\n                </p>\n                {techStacks}\n            </li>\n        );\n    })\n    let projectWork=(\n        <>  \n            <h2 className='text-muted text-center'>Projects <small>What I did?</small></h2>\n            <ul className='list-group mt-2'>\n                {myProject}\n            </ul>\n        </>\n    )\n    return projectWork;\n}\nexport default ProjectWork;","import React from 'react';\n\nfunction Skills(props){\n    let mySkills = props.mySkills.map((item,index)=>{\n        return (<li key={index}>{item} </li>);\n    })\n    let skills=(\n        <div className='row mt-5'>\n            <div className='col-md-8'>\n                <h3>My Skills</h3>\n                <span className='text-muted mb-3'>Programming</span>\n                <p className='text-justify'>\n                {props.skillContent}\n                </p>\n            </div>\n            <div className='col-md-4'>\n                <ul className='skills'>\n                    {mySkills}\n                </ul>\n            </div>\n        </div>\n    )   \n    return skills;\n}\nexport default Skills","import React, { Fragment } from \"react\";\nimport ReactTable from \"react-table\";\nimport { CSVLink } from \"react-csv\";\n\nimport \"react-table/react-table.css\";\n\nfunction Table(props) {\n  let table = (\n    <Fragment>\n      <ReactTable\n        columns={props.columns}\n        data={props.data}\n        defaultPageSize={3}\n        showPagination={true}\n        resizable={false}\n        previousText=\"Previous\"\n        nextText=\"Next\"\n        pageSizeOptions={[5, 10, 20, 40, 80, 160]}\n        filterable={true}\n        loading={false}\n        sortable={true}\n        minRows={1}\n        getTheadFilterThProps={() => {\n          return {\n            style: { overflow: \"visible\", textAlign: \"left\" }\n          };\n        }}\n      />\n\n      <CSVLink data={props.data}>Download My Project List</CSVLink>\n    </Fragment>\n  );\n  \n  return table;\n}\nexport default Table;\n","import React from 'react';\nimport {FaCopyright} from 'react-icons/fa';\nfunction Footer(props){\n    let footer =(\n        <div className='footer clearfix'>\n            <div className='copyright'>\n                <FaCopyright/> {props.name}\n            </div>\n            <div className='info'>\n                Design: <a href='http://aakritsubedi.com.np'>AAkrit Subedi</a>\n            </div>\n        </div>\n    )\n    return footer;\n}\n\nexport default Footer;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { FaFacebookF, FaTwitter, FaInstagram, FaLinkedinIn, FaGithub } from \"react-icons/fa\";\nconst options=[\n    {value: 'all', label: 'All Data'},\n    {value: 'Completed', label:'Completed'},\n    {value: 'Working on it',label:'Working on it'}\n];\nlet allData = {\n    myInfo: {\n        name: 'Aakrit Subedi',\n        email: 'aakritsubedi9@gmail.com',\n        contact: '+977-9808858237',\n        location: 'Basundhara,Kathmandu',\n        img: 'http://aakritsubedi.com.np/images/profile_new.jpg',\n        aboutMe: 'Honors student of Kantipur Engineering College, Computer Engineering. Academic credentials are reinforced by programming experience gained during an internship with some companies. Strong knowledge of object-oriented programing and web development tools using PHP and Javascript. Known as a self-starter, team player, and multitasker--strive to consistently exceed expectations.',\n        bgImg: 'https://images.unsplash.com/photo-1533294455009-a77b7557d2d1?ixlib:rb-1.2.1&auto:format&fit:crop&w:750&q:80',\n        skills: ['HTML', 'CSS', 'Javascript', 'jQuery', 'react.js', 'Express', 'PHP', 'Laravel', 'Java', 'C++', 'C', 'MySQL', 'Latex'],\n        skillsContent: 'I have learned lots of important aspects about computer science throughout my years in school. For example, I have learned about multithreading, image processing, GUI (Graphical User Interface) development, etc. I am comfortable with object oriented languages such as Javascript,PHP,Java. I also enjoy powerful low level languages such as C.',\n        website: 'http://aakritsubedi.com.np'\n    },\n    socialMediaData: [\n        {\n            id: 1,\n            iconOf: <FaFacebookF />,\n            link: 'https://www.facebook.com/aakritsubedi9'\n        },\n        {\n            id: 2,\n            iconOf: <FaTwitter />,\n            link: 'https://twitter.com/SubediAakrit'\n        },\n        {\n            id: 3,\n            iconOf: <FaInstagram />,\n            link: 'https://www.instagram.com/aakrit_subedi'\n        },\n        {\n            id: 4,\n            iconOf: <FaLinkedinIn />,\n            link: 'https://www.linkedin.com/in/aakrit-subedi-942a5875/'\n        },\n        {\n            id: 5,\n            iconOf: <FaGithub />,\n            link: 'https://www.github.com/aakritsubedi'\n        }\n    ],\n    myEducation: [\n        {\n            date: '2015-2019',\n            collegeName: 'Kantipur Engineering College',\n            title: 'Bachelor\\'s degree of Engineering'\n        },\n        {\n            date: '2011-2014',\n            collegeName: 'National School of Sciences(NIST)',\n            title: 'Plus2 Science'\n        },\n        {\n            date: '2006-2010',\n            collegeName: 'Paragon Public School',\n            title: 'School Leaving Certificate'\n        },\n        {\n            date: '1999-2006',\n            collegeName: 'Satya Sai Sikshya Sadan',\n            title: 'School Level'\n        }\n    ],\n    myProject: [\n        {\n            id: 1,\n            projectName: 'Derm Meds:skin diseases analysis using CNN',\n            title: 'Major Project',\n            progress: 95,\n            link: 'https://github.com/aakritsubedi/DermMeds-MajorProject',\n            desc: 'Derm Meds is a web based application with interactive UI design and build with an objective to make a system that can predicts the phases of skin cancer using the image of infected part. The image here is preprocessed to remove the noise and resized into the standard size which is feed into the convolution neural network to make prediction. The prediction is displayed in human readable form and various graphical representation for proper illustration of the result. As an additional feature to predicting the phase of skin cancer the feature like live video call using opentok API have made the project complete care of your skin as online dermatologist.',\n            techStack: ['HTML', 'CSS', 'Laravel', 'Python', 'Flask', 'MySQL']\n        },\n        {\n            id: 2,\n            projectName: 'Drag HTML',\n            title: 'Vanilla JS Project',\n            progress: 100,\n            desc: 'Drag HTML is a web application that allows the user to drag the HTML components and create websites. The project is entirely build using vanilla Javascript. DragHTML lists the commonly used tag in the sidebar that is dragged and added to DOM. The project allows the user to save the state of the project in local storage after parsing the HTML code to JSON format.',\n            link: 'https://github.com/aakritsubedi/drawHTMLv2',\n            techStack: ['HTML', 'CSS', 'JS']\n        },\n        {\n            id: 3,\n            projectName: 'Capture Nepal',\n            title: 'Commercial Project',\n            progress: 50,\n            desc: 'Capture Nepal is mainly made for the comfort of a travel agency owner and the customers who are fond of travelling. It is a complete package for a travel agency. This site has different packages which include popular destinations of Nepal and its information, uploaded by the admin himself. It provides different facilities like tour booking, ticket booking and other special bookings. Also it covers all the facilities that a tourist will require like taxi booking, money exchange etc. After any booking, confirmation is done via email and payment methods are done online by using PayPal API. Also, the customer can interact with the admin in case he/she requires any help. Thus, this site includes all the major facilities that a travel agency and a tourist requires, hence making everything easier and simpler.',\n            link: 'https://github.com/aakritsubedi',\n            techStack: ['HTML', 'CSS', 'Laravel', 'MySQL', 'PHP']\n        },\n        {\n            id: 4,\n            projectName: 'Easy Election:Nepalese can vote wherever they are',\n            title: 'Minor Project',\n            progress: 100,\n            link: 'https://github.com/aakritsubedi',\n            desc: 'The Easy Election is web based and mobile friendly system replacing the existing voting process reducing the complexity and cost of the election process. The aim of this project is to help voters to cast their vote from different location from specified zone by the concern authority. Easy Election is the online election system which will allow people to cast votes in a more convenient way, by using available resources which could facilitate the voters during elections and it is also a platform to share their views problems with the help of the discussion forum and other features of the system.',\n            techStack: ['HTML', 'CSS', 'Java(JSP)']\n        },\n        {\n            id: 5,\n            projectName: 'Godam-manage your stock',\n            title: 'Personal Project',\n            progress: 95,\n            desc: 'Godam is real time POS and retail software which is made solely for marketing purpose. As the name suggests, it especially focuses on the management of the main source where all the products come from as well database the place where the products are stored. This site is made for the people who do business in marketing and it helps them to keep track of the amount of products sold and delivered as well as it provides a platform in which all the workers from the same company or store get to interact with each other and exhibit their respective roles and performance in the marketing sector. This site also creates a healthy environment with the customers with emailing service, money transactions and paid due records with addition to delivery and other services. This web based application makes the overall marketing activities convenient as it keeps track of all the expenditure, income, financial status, profit-loss, delivery, employee payroll, accounting etc. in a single integrated system.',\n            link: 'https://github.com/aakritsubedi',\n            techStack: ['HTML', 'CSS', 'PHP']\n        },\n        {\n            id: 6,\n            projectName: 'Traveling Nepal-once is not enough',\n            title: 'Personal Project',\n            progress: 80,\n            link: 'https://github.com/aakritsubedi',\n            desc: 'This is a website which is solely made for the tourists as well as the people of Nepal who love traveling. This site targets to develop the tourism industry of Nepal which is one of the main sectors from which our country gets the foreign economy. From this site, we intend to help, guide and serve the people who love traveling as well as advertise our country to different parts of the world so that more and more tourists could come and visit us. This website showcases the major beauties and attractions of our country as well as guides them and provides them major services for traveling purpose. This site includes everything a tourist needs such as map guides, taxi booking service, pictures including description of most of the places of our county and also provides a platform in which people can openly discuss about their experiences of traveling as well as give a view about how they felt about our country.',\n            techStack: ['HTML', 'CSS', 'PHP']\n        },\n        {\n            id: 7,\n            projectName: 'Home Automation',\n            title: 'Group Project',\n            progress: 100,\n            desc: 'Home Automation system consists of switches and sensors connected to a central hub, often called as gateway, which is an Arduino microcontroller in this case. In this today’s ever growing world, where people are busy most of the time, the manual control systems at home fail to meet the demands. This is where home automation systems come to play. This project applies the similar centralization technique in remotely controlling the home appliances. The door security system prevents any strangers from entering the house without the owner’s permission, which is related using a password mechanism. The GSM module used in this project can provide SMS feedback to the user and also enable the user to control the household appliances, without the need of the user to be present inside the house.',\n            link: 'https://github.com/aakritsubedi',\n            techStack: ['ELectronic', 'Arduino']\n        },\n        {\n            id: 8,\n            projectName: 'BINGO',\n            title: 'College Project',\n            progress: 100,\n            link: 'https://github.com/aakritsubedi/bingoC-',\n            desc: 'The Bingo Game is proposed to provide entertainment for users. Here in this game, user is allowed to select the grid (game sheet) and the computer will be provided the game sheet accordingly. The main features of the game are to generate random number and to mark it and save their playing and leaderboard that provides the brief summary of the player playing.',\n            techStack: ['C++']\n        },\n        {\n            id: 9,\n            projectName: 'Drop me here my cab',\n            title: 'NCELL APP Camp Project',\n            progress: 100,\n            desc: 'Drop me here my cab is proposed to provide the facility of vehicle hiring. It was initially targeted to hire Cab in Kathmandu Valley easily and provide better service for its user. This android application is concept of system to provide facility of vehicle hiring for people who are in need.',\n            link: 'https://github.com/aakritsubedi',\n            techStack: ['Android']\n        },\n        {\n            id: 10,\n            projectName: 'Store Management System',\n            title: 'College Project',\n            progress: 100,\n            desc: 'The department store management software proposed to provide all basic facilities like process bill, manages product details in stock for proper working environment. This software is assumed helping department store to manage their stocks and also employee records. In addition this software also helps in processing bill for customer after they purchases good for store.',\n            link: 'https://github.com/aakritsubedi',\n            techStack: ['C']\n        },\n        {\n            id: 11,\n            projectName: 'School Management System',\n            title: 'School Project',\n            progress: 100,\n            desc: 'The Result processing software for schools software proposed to keep and manage the records for the student’s academic performance along with their attendance report. This software was to help school department to manage and keep record of student.',\n            link: 'https://github.com/aakritsubedi',\n            techStack: ['QBASIC']\n        }\n    ],\n    column: [\n        {\n            Header: \"Id\",\n            accessor: \"id\",\n            filterable: false,\n            width: 50,\n            maxWidth: 75,\n            minWidth: 40\n        },\n        {\n            Header: 'Project Info',\n            columns: [\n                {\n                    Header: \"Project Title\",\n                    accessor: \"projectName\",\n                    sortable: false\n                },\n                {\n                    Header: \"Description\",\n                    accessor: \"desc\",\n                    sortable: false,\n                    filterable: false\n                },\n                {\n                    Header: \"Tech Stack\",\n                    accessor: 'techStack',\n                    sortable: false,\n                    filterable: true,\n                    Cell: row => (\n                        <ul className='skill-set'>\n                            {row.value.map((item, index) => {\n                                return <li key={index}>{item}</li>\n                            })}\n                        </ul>\n                    ),\n                    id: 'techStack',\n                    filterMethod: (filter, row) => {\n                        if ((row.techStack.toString().toLowerCase()).includes(filter.value.toLowerCase())) {\n                            return true;\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            Header: 'Extra Info',\n            columns: [\n                {\n                    Header: \"Progress\",\n                    accessor: \"progress\",\n                    sortable: true,\n                    filterable: false,\n                    Cell: row => <div className='myProgress' title={row.value + '% Completed'}><div className='myBar' style={{ width: row.value + '%' }}>{row.value + '%'}</div></div>\n                },\n                {\n                    Header: \"Status\",\n                    accessor: \"progress\",\n                    sortable: false,\n                    width: 210,\n                    maxWidth: 250,\n                    minWidth: 175,\n                    Cell: ({ value }) => (value < 100 ? <span className='pending'>Working on it</span> : <span className='success'>Completed</span>),\n                    id: 'status',\n                    filterMethod: (filter, row) => {\n                        if (filter.value === \"all\") {\n                            return true;\n                        }\n                        if (filter.value === \"Completed\") {\n                            return row[filter.id] === 100;\n                        }\n                        else {\n                            return row[filter.id] !== 100;\n                        }\n                    },\n                    Filter: ({ filter, onChange }) =>    \n                        <Select className='Select' placeholder='Search Status...' options={options} onChange={event => onChange(event.value)} />       \n                }\n            ]\n        }\n\n    ]\n}\n\n\nexport default allData","import React,{Component} from 'react';\n\nimport TopNav from './../Components/TopNav/TopNav';\nimport MainNav from '../Components/MainNav/MainNav';\nimport Banner from '../Components/Banner/Banner';\nimport Education from '../Components/Education/Education';\nimport ProjectWork from '../Components/ProjectWork/ProjectWork';\nimport Skills from '../Components/Skills/Skills';\nimport Table from '../Components/Table/Table';\nimport Footer from '../Components/Footer/Footer';\n\nimport * as myData from '../Constants/myInfo';\n\nclass Portfolio extends Component{\n    constructor(){\n        super();\n        this.data();\n    }\n    data(){\n        this.navItems=[\n            {\n                id:1,\n                title: 'About Me',\n                link : '#aboutMe'\n            },\n            {\n                id:2,\n                title: 'Education',\n                link : '#education'\n            },\n            {\n                id:3,\n                title: 'Projects',\n                link : '#project'\n            }\n        ]\n        this.socialMediaData = myData.default.socialMediaData;\n        this.myInfo= myData.default.myInfo;\n        this.myEducation =myData.default.myEducation;\n        this.myProject = myData.default.myProject;\n        this.column = myData.default.column;\n        this.dataSet =this.myProject;\n\n    }\n    render(){\n        let portfolio=(\n            <>\n                <div className='container' style={{paddingBottom:'50px'}}>\n                <TopNav data={this.socialMediaData} myInfo={this.myInfo}/>\n                <div className='main-content'>\n                    <MainNav myInfo={this.myInfo} navItems={this.navItems}/>\n                    <Banner myInfo={this.myInfo}/>\n                    <div className='row p-2'>\n                        <div className='col-md-12'>\n                            <a name='education'></a>\n                            <Education myEducation={this.myEducation}/>\n                        </div>\n                    </div>\n                    <div className='row p-2'>\n                        <div className='col-md-12'>\n                            <a name='project'></a>\n                            <ProjectWork myProject={this.myProject} />\n                            <hr/>\n                            <Table  columns={this.column} data={this.dataSet}/>\n                        </div>\n                    </div>\n                </div>\n                <Skills mySkills={this.myInfo.skills} skillContent={this.myInfo.skillsContent}/>\n                </div>\n                <Footer name={this.myInfo.name}/>\n            </>\n        );\n\n        return portfolio;\n    }\n}\n\nexport default Portfolio;","import React from 'react';\nimport './App.css';\n\nimport Portfolio from './Container/Portfolio';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Portfolio />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst ROOT = document.getElementById('root');\nReactDOM.render( < App / > , ROOT );\n\nserviceWorker.unregister();"],"sourceRoot":""}